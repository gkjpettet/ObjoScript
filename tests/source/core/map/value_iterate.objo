var a = {"one": 1, "two": 2, "three": 3, "four": 4}.values

System.print(a.iterate(nothing) is Number) # expect: true
System.print(a.iterate(nothing) >= 0) # expect: true

System.print(a.iterate(0) is Number) # expect: true
System.print(a.iterate(0) > 0) # expect: true
System.print(a.iterate(1) is Number) # expect: true
System.print(a.iterate(1) > 0) # expect: true
System.print(a.iterate(2) is Number) # expect: true
System.print(a.iterate(2) > 0) # expect: true
System.print(a.iterate(3) is Boolean) # expect: true
System.print(a.iterate(3) == false) # expect: true

var previous = -1
var iterator = a.iterate(nothing)
while (iterator) {

System.print(iterator > previous)
System.print(iterator is Number)
previous = iterator
iterator = a.iterate(iterator)
}
# First entry:
# expect: true
# expect: true
# Second entry:
# expect: true
# expect: true
# Third entry:
# expect: true
# expect: true
# Fourth entry:
# expect: true
# expect: true

# Out of bounds.
System.print(a.iterate(16)) # expect: false
System.print(a.iterate(-1)) # expect: false

# Nothing to iterate in an empty map.
System.print({}.values.iterate(nothing)) # expect: false